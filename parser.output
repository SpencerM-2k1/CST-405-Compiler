Grammar

    0 $accept: Program $end

    1 Program: VarDeclList StmtList

    2 VarDeclList: ε
    3            | VarDecl VarDeclList

    4 VarDecl: TYPE ID SEMI
    5        | TYPE ID

    6 StmtList: ε
    7         | Stmt StmtList

    8 Stmt: ID ASSIGN Expr SEMI
    9     | WRITE ID SEMI

   10 Expr: Expr BinOp Term
   11     | Term

   12 Term: ID
   13     | NUMBER

   14 BinOp: PLUS
   15      | MINUS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <sval> (258) 4 5
    ID <sval> (259) 4 5 8 9 12
    SEMI <sval> (260) 4 8 9
    ASSIGN <sval> (261) 8
    PLUS <sval> (262) 14
    MINUS <sval> (263) 15
    NUMBER <intVal> (264) 13
    WRITE <sval> (265) 9


Nonterminals, with rules where they appear

    $accept (11)
        on left: 0
    Program <ast> (12)
        on left: 1
        on right: 0
    VarDeclList <ast> (13)
        on left: 2 3
        on right: 1 3
    VarDecl <ast> (14)
        on left: 4 5
        on right: 3
    StmtList <ast> (15)
        on left: 6 7
        on right: 1 7
    Stmt <ast> (16)
        on left: 8 9
        on right: 7
    Expr <ast> (17)
        on left: 10 11
        on right: 8 10
    Term <ast> (18)
        on left: 12 13
        on right: 10 11
    BinOp <ast> (19)
        on left: 14 15
        on right: 10


State 0

    0 $accept: • Program $end

    TYPE  shift, and go to state 1

    $default  reduce using rule 2 (VarDeclList)

    Program      go to state 2
    VarDeclList  go to state 3
    VarDecl      go to state 4


State 1

    4 VarDecl: TYPE • ID SEMI
    5        | TYPE • ID

    ID  shift, and go to state 5


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 6


State 3

    1 Program: VarDeclList • StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 6 (StmtList)

    StmtList  go to state 9
    Stmt      go to state 10


State 4

    3 VarDeclList: VarDecl • VarDeclList

    TYPE  shift, and go to state 1

    $default  reduce using rule 2 (VarDeclList)

    VarDeclList  go to state 11
    VarDecl      go to state 4


State 5

    4 VarDecl: TYPE ID • SEMI
    5        | TYPE ID •

    SEMI  shift, and go to state 12

    $default  reduce using rule 5 (VarDecl)


State 6

    0 $accept: Program $end •

    $default  accept


State 7

    8 Stmt: ID • ASSIGN Expr SEMI

    ASSIGN  shift, and go to state 13


State 8

    9 Stmt: WRITE • ID SEMI

    ID  shift, and go to state 14


State 9

    1 Program: VarDeclList StmtList •

    $default  reduce using rule 1 (Program)


State 10

    7 StmtList: Stmt • StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 6 (StmtList)

    StmtList  go to state 15
    Stmt      go to state 10


State 11

    3 VarDeclList: VarDecl VarDeclList •

    $default  reduce using rule 3 (VarDeclList)


State 12

    4 VarDecl: TYPE ID SEMI •

    $default  reduce using rule 4 (VarDecl)


State 13

    8 Stmt: ID ASSIGN • Expr SEMI

    ID      shift, and go to state 16
    NUMBER  shift, and go to state 17

    Expr  go to state 18
    Term  go to state 19


State 14

    9 Stmt: WRITE ID • SEMI

    SEMI  shift, and go to state 20


State 15

    7 StmtList: Stmt StmtList •

    $default  reduce using rule 7 (StmtList)


State 16

   12 Term: ID •

    $default  reduce using rule 12 (Term)


State 17

   13 Term: NUMBER •

    $default  reduce using rule 13 (Term)


State 18

    8 Stmt: ID ASSIGN Expr • SEMI
   10 Expr: Expr • BinOp Term

    SEMI   shift, and go to state 21
    PLUS   shift, and go to state 22
    MINUS  shift, and go to state 23

    BinOp  go to state 24


State 19

   11 Expr: Term •

    $default  reduce using rule 11 (Expr)


State 20

    9 Stmt: WRITE ID SEMI •

    $default  reduce using rule 9 (Stmt)


State 21

    8 Stmt: ID ASSIGN Expr SEMI •

    $default  reduce using rule 8 (Stmt)


State 22

   14 BinOp: PLUS •

    $default  reduce using rule 14 (BinOp)


State 23

   15 BinOp: MINUS •

    $default  reduce using rule 15 (BinOp)


State 24

   10 Expr: Expr BinOp • Term

    ID      shift, and go to state 16
    NUMBER  shift, and go to state 17

    Term  go to state 25


State 25

   10 Expr: Expr BinOp Term •

    $default  reduce using rule 10 (Expr)
